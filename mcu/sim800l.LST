C51 COMPILER V9.01   SIM800L                                                               04/01/2019 14:31:40 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE SIM800L
OBJECT MODULE PLACED IN sim800l.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE sim800l.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg51.h>  
   2          #include <string.h>
   3          
   4          #define LENGTH 400              // 收到一条最大短信大概350字节
   5          
   6          unsigned char code TC_CONNECT[] = "AT";                                 // 发送内容连接
   7          unsigned char code TC_RUNMODE[] = "AT+CNMI=1,2,0,0,0";  // 发送内容模式
   8          
   9          unsigned char code TC_TCP_CHECKSIM[] = "AT+CPIN?";              // 1.检查SIM状态
  10          unsigned char code TC_TCP_CHECKNET[] = "AT+CSQ";                        // 2.检查网络信号强度
  11          unsigned char code TC_TCP_CHECKREG[] = "AT+CREG?";              // 3.检查网络注册状态
  12          unsigned char code TC_TCP_CHECKGPRS[] = "AT+CGATT?";            // 4.检查GPRS附着状态
  13          unsigned char code TC_TCP_SETAPN[] = "AT+CSTT=\"CMNET\"";// 5.设置APN
  14          unsigned char code TC_TCP_GETLINK[] = "AT+CIICR";               // 6.建立无线链路
  15          unsigned char code TC_TCP_GETIP[] = "AT+CIFSR";                 // 获得本地IP地址
  16          unsigned char code TC_TCP_TOSERVER[] = "AT+CIPSTART=\"TCP\",\"193.112.94.54\",\"9001\"";
  17          unsigned char code TC_TCP_SENDTEXT[] = "AT+CIPSEND";            // 发送具体数据
  18          unsigned char code TC_TCP_CLOSE[] = "AT+CIPCLOSE";              // 主动关闭链接
  19          unsigned char code TC_TCP_SHUT[] = "AT+CIPSHUT";                        // 关闭GPRS通信
  20          
  21          
  22          unsigned char xdata r_datas[LENGTH] = {0};                                              // 缓存MCU传入的数据
  23          unsigned char xdata t_datas[LENGTH] = {0};                                              // 传到TCP服务器的数据
  24          unsigned int MAX=0;
  25          unsigned int index=0;                                                           // 缓存数组索引
  26          
  27          //--声明全局函数--//
  28          void UsartConfiguration();                              // 串口参数配
  29          void Delay10ms(unsigned int c);                 // 误差 0us             # 感觉要*20 就是1000ms等于20s
  30          void send_byte(unsigned char ch);               // 发送一个字节 
  31          void print_r_datas();                                           // 调试用，输出r_datas数据
  32          void print_t_datas();                                           // 调试用，输出t_datas数据
  33          void clean_r_datas();                                           // data1数组清零
  34          
  35          void sim800l_connect();                                 // 自适应波特率连接SIM800L模块
  36          void sim800l_set_runmode();                             // 设置模块接收到新短信直接转发至MCU
  37          void sim800l_wait_sms();                                // 轮询短信
  38          
  39          void tcp();
  40          void tcp_1_checksim();
  41          void tcp_2_checknet();
  42          void tcp_3_checkreg();
  43          void tcp_4_checkgprs();
  44          void tcp_5_setapn();
  45          void tcp_6_getlink();
  46          void tcp_7_getip();
  47          void tcp_8_toserver();
  48          void tcp_9_sendtext();
  49          void tcp_10_close();
  50          void tcp_11_shut();
  51          
  52          
  53          /*******************************************************************************
  54          * 函 数 名         : main
  55          * 函数功能                 : 主函数
C51 COMPILER V9.01   SIM800L                                                               04/01/2019 14:31:40 PAGE 2   

  56          * 输    入         : 无
  57          * 输    出         : 无
  58          *******************************************************************************/
  59          
  60          void main()
  61          {
  62   1              UsartConfiguration();
  63   1      
  64   1              P0 = 0x01;       // 0000 0001
  65   1      
  66   1              SBUF = 's';
  67   1      
  68   1              sim800l_connect();
  69   1      
  70   1              clean_r_datas();
  71   1      
  72   1              sim800l_set_runmode();
  73   1      
  74   1              clean_r_datas();
  75   1      
  76   1              sim800l_wait_sms();
  77   1      
  78   1      
  79   1      
  80   1              send_byte('e');
  81   1      
  82   1      
  83   1              while(1);               // 调试用，防止死循环看不出代码差异
  84   1              
  85   1      }
  86          
  87          
  88          void send_byte(unsigned char ch)
  89          {
  90   1              while(TI!=1);
  91   1              TI = 0;
  92   1              SBUF = ch;
  93   1      }
  94          
  95          
  96          
  97          void print_r_datas()
  98          {
  99   1              int i;
 100   1              for(i = 0; i < strlen(r_datas); i++)
 101   1              {
 102   2                      send_byte(r_datas[i]);  
 103   2              }
 104   1      }
 105          
 106          void print_t_datas()
 107          {
 108   1              int i;
 109   1              for(i = 0; i < strlen(t_datas); i++)
 110   1              {
 111   2                      send_byte(t_datas[i]);  
 112   2              }
 113   1      }
 114          
 115          void clean_r_datas()
 116          {
 117   1              memset(r_datas,0,sizeof(r_datas));
C51 COMPILER V9.01   SIM800L                                                               04/01/2019 14:31:40 PAGE 3   

 118   1              index = 0;
 119   1      }
 120          
 121          
 122          void sim800l_connect()
 123          {
 124   1              int i;
 125   1              unsigned char *p;
 126   1      
 127   1              while(1)
 128   1              {
 129   2                      for(i = 0; i < sizeof(TC_CONNECT)-1; i++)
 130   2                      {
 131   3                              send_byte(TC_CONNECT[i]);       
 132   3                      }
 133   2                      send_byte(0x0d);
 134   2                      send_byte(0x0a);
 135   2                      Delay10ms(1);
 136   2      
 137   2                      p = strstr(r_datas,"OK");
 138   2                      if(p != NULL)
 139   2                      {
 140   3                              break;
 141   3                      }
 142   2              }
 143   1      }
 144          
 145          
 146          void sim800l_set_runmode()
 147          {
 148   1              int i;
 149   1              unsigned char *p;
 150   1      
 151   1              while(1)
 152   1              {
 153   2                      for(i = 0; i < sizeof(TC_RUNMODE)-1; i++)
 154   2                      {
 155   3                              send_byte(TC_RUNMODE[i]);
 156   3                      }
 157   2                      send_byte(0x0d);
 158   2                      send_byte(0x0a);
 159   2                      Delay10ms(1);
 160   2      
 161   2                      p = strstr(r_datas,"OK");
 162   2                      if(p != NULL)
 163   2                      {
 164   3                              break;
 165   3      
 166   3                      }
 167   2              }
 168   1      }
 169          
 170          
 171          void sim800l_wait_sms()
 172          {
 173   1              char *p;
 174   1              while(1)
 175   1              {
 176   2                      // do sms;
 177   2                      P0 = 0x02;       // 0000 0010
 178   2      
 179   2                      send_byte(0x57);                // W
C51 COMPILER V9.01   SIM800L                                                               04/01/2019 14:31:40 PAGE 4   

 180   2                      send_byte(0x41);                // A
 181   2                      send_byte(0x49);                // I
 182   2                      send_byte(0x54);                // T
 183   2                      send_byte(0x0d);
 184   2                      send_byte(0x0a);
 185   2                      Delay10ms(10);
 186   2                      
 187   2                      // 这个延迟时间必须足够，不然串口收到的数据（短信）不完整
 188   2                      // 给串口中断足够的时间去接收数据放入数组
 189   2                      p = strstr(r_datas,"CMT");
 190   2                      if(p != NULL)
 191   2                      {
 192   3                              P0 = 0xa5;       // 1010 0101
 193   3                              send_byte(0x53);   // S
 194   3      //                      print_r_datas();
 195   3                              send_byte(0x53);
 196   3      
 197   3                              // 将收到的数据缓存
 198   3                              strcpy(t_datas,r_datas);
 199   3      
 200   3                              // 清空接收缓存数组
 201   3                              clean_r_datas();
 202   3      
 203   3                              // 短信发送到TCP服务器
 204   3                              tcp();
 205   3      
 206   3                              P0 = 0x0f;       // 0000 1111
 207   3      
 208   3      
 209   3                      }
 210   2                      clean_r_datas();
 211   2              }
 212   1      
 213   1      }
 214          
 215          void tcp()
 216          {
 217   1              tcp_1_checksim();
 218   1              clean_r_datas();
 219   1      
 220   1              tcp_2_checknet();
 221   1              clean_r_datas();
 222   1              tcp_3_checkreg();
 223   1              clean_r_datas();
 224   1      
 225   1              tcp_4_checkgprs();
 226   1              clean_r_datas();
 227   1      
 228   1              tcp_5_setapn();
 229   1              clean_r_datas();
 230   1      
 231   1              tcp_6_getlink();
 232   1              clean_r_datas();
 233   1      
 234   1              tcp_7_getip();
 235   1              clean_r_datas();
 236   1      
 237   1              tcp_8_toserver();
 238   1      //      clean_r_datas();   // 返回的是CONNETC OK，对下一步判断没有影响，可以不用清空，提高运行速度
 239   1      
 240   1              tcp_9_sendtext();
 241   1      //      clean_r_datas();        // 后面无判断，注释掉提高运行速度
C51 COMPILER V9.01   SIM800L                                                               04/01/2019 14:31:40 PAGE 5   

 242   1      
 243   1              tcp_10_close();
 244   1      //      clean_r_datas();        // 后面无判断，注释掉提高运行速度
 245   1      
 246   1              tcp_11_shut();
 247   1              clean_r_datas();
 248   1      
 249   1      }
 250          
 251          void tcp_1_checksim()
 252          {
 253   1              int i;
 254   1              unsigned char *p;
 255   1      
 256   1              while(1)
 257   1              {
 258   2                      for(i = 0; i < sizeof(TC_TCP_CHECKSIM)-1; i++)
 259   2                      {
 260   3                              send_byte(TC_TCP_CHECKSIM[i]);
 261   3                      }
 262   2                      send_byte(0x0d);
 263   2                      send_byte(0x0a);
 264   2                      Delay10ms(5);
 265   2      
 266   2                      //正确返回：
 267   2                      //+CPIN: READY
 268   2      
 269   2                      //OK
 270   2                      p = strstr(r_datas,"OK");
 271   2                      if(p != NULL)
 272   2                      {
 273   3                              P0 = 0x04;       // 0000 0100
 274   3      
 275   3                              break;
 276   3                      }
 277   2              }
 278   1      
 279   1      }
 280          
 281          void tcp_2_checknet()
 282          {
 283   1              int i;
 284   1              unsigned char *p;
 285   1      
 286   1              while(1)
 287   1              {
 288   2                      for(i = 0; i < sizeof(TC_TCP_CHECKNET)-1; i++)
 289   2                      {
 290   3                              send_byte(TC_TCP_CHECKNET[i]);
 291   3                      }
 292   2                      send_byte(0x0d);
 293   2                      send_byte(0x0a);
 294   2                      Delay10ms(5);
 295   2      
 296   2                      //正确返回：
 297   2                      //+CSQ: 20,0
 298   2      
 299   2                      //OK
 300   2                      p = strstr(r_datas,"OK");
 301   2                      if(p != NULL)
 302   2                      {
 303   3                              P0 = 0x08;       // 0000 1000
C51 COMPILER V9.01   SIM800L                                                               04/01/2019 14:31:40 PAGE 6   

 304   3      
 305   3                              break;
 306   3                      }
 307   2              }
 308   1      
 309   1      }
 310          
 311          void tcp_3_checkreg()
 312          {
 313   1              int i;
 314   1              unsigned char *p;
 315   1      
 316   1              while(1)
 317   1              {
 318   2                      for(i = 0; i < sizeof(TC_TCP_CHECKREG)-1; i++)
 319   2                      {
 320   3                              send_byte(TC_TCP_CHECKREG[i]);
 321   3                      }
 322   2                      send_byte(0x0d);
 323   2                      send_byte(0x0a);
 324   2                      Delay10ms(5);
 325   2      
 326   2                      //正确返回：
 327   2                      //+CREG: 0,1
 328   2      
 329   2                      //OK
 330   2                      p = strstr(r_datas,"OK");
 331   2                      if(p != NULL)
 332   2                      {
 333   3                              P0 = 0x10;       // 0001 0000
 334   3      
 335   3                              break;
 336   3                      }
 337   2              }
 338   1      
 339   1      }
 340          
 341          void tcp_4_checkgprs()
 342          {
 343   1              int i;
 344   1              unsigned char *p;
 345   1      
 346   1              while(1)
 347   1              {
 348   2                      for(i = 0; i < sizeof(TC_TCP_CHECKGPRS)-1; i++)
 349   2                      {
 350   3                              send_byte(TC_TCP_CHECKGPRS[i]);
 351   3                      }
 352   2                      send_byte(0x0d);
 353   2                      send_byte(0x0a);
 354   2                      Delay10ms(5);
 355   2      
 356   2                      //正确返回：
 357   2                      //+CGATT: 1
 358   2      
 359   2                      //OK
 360   2                      p = strstr(r_datas,"OK");
 361   2                      if(p != NULL)
 362   2                      {
 363   3                              P0 = 0x20;       // 0010 0000
 364   3      
 365   3                              break;
C51 COMPILER V9.01   SIM800L                                                               04/01/2019 14:31:40 PAGE 7   

 366   3                      }
 367   2              }
 368   1      
 369   1      }
 370          
 371          void tcp_5_setapn()
 372          {
 373   1              int i;
 374   1      //      unsigned char *p;
 375   1      
 376   1      //      while(1)   // 设置超过一次就会错误
 377   1      //      {
 378   1                      for(i = 0; i < sizeof(TC_TCP_SETAPN)-1; i++)
 379   1                      {
 380   2                              send_byte(TC_TCP_SETAPN[i]);
 381   2                      }
 382   1                      send_byte(0x0d);
 383   1                      send_byte(0x0a);
 384   1                      Delay10ms(5);
 385   1      
 386   1                      P0 = 0x40;       // 0100 0000
 387   1      
 388   1      
 389   1                      //正确返回
 390   1                      //OK
 391   1      //              p = strstr(r_datas,"OK");
 392   1      //              if(p != NULL)
 393   1      //              {
 394   1      //                      break;
 395   1      //              }
 396   1      //      }
 397   1      
 398   1      }
 399          
 400          void tcp_6_getlink()
 401          {
 402   1              int i;
 403   1      //      unsigned char *p;
 404   1      
 405   1      //      while(1)  // 设置超过一次就会错误
 406   1      //      {
 407   1                      for(i = 0; i < sizeof(TC_TCP_GETLINK)-1; i++)
 408   1                      {
 409   2                              send_byte(TC_TCP_GETLINK[i]);
 410   2                      }
 411   1                      send_byte(0x0d);
 412   1                      send_byte(0x0a);
 413   1                      Delay10ms(5);
 414   1      
 415   1                      P0 = 0x80;       // 1000 0000
 416   1      
 417   1      
 418   1                      //正确返回
 419   1                      //OK
 420   1      //              p = strstr(r_datas,"OK");
 421   1      //              if(p != NULL)
 422   1      //              {
 423   1      //                      break;
 424   1      //              }
 425   1      //      }
 426   1      
 427   1      }
C51 COMPILER V9.01   SIM800L                                                               04/01/2019 14:31:40 PAGE 8   

 428          
 429          void tcp_7_getip()
 430          {
 431   1              int i;
 432   1      //      unsigned char *p;
 433   1      
 434   1      //      while(1)  
 435   1      //      {
 436   1                      for(i = 0; i < sizeof(TC_TCP_GETIP)-1; i++)
 437   1                      {
 438   2                              send_byte(TC_TCP_GETIP[i]);
 439   2                      }
 440   1                      send_byte(0x0d);
 441   1                      send_byte(0x0a);
 442   1                      Delay10ms(5);
 443   1      
 444   1      
 445   1                      P0 = 0x03;       // 0000 0011
 446   1      
 447   1      
 448   1                      //正确返回：
 449   1                      //10.42.6.249
 450   1      //              p = strstr(r_datas,".");
 451   1      //              if(p != NULL)
 452   1      //              {
 453   1      //                      break;
 454   1      //              }
 455   1      //      }
 456   1      
 457   1      }
 458          
 459          void tcp_8_toserver()
 460          {
 461   1              int i;
 462   1              unsigned char *p;
 463   1      
 464   1              while(1)
 465   1              {
 466   2                      for(i = 0; i < sizeof(TC_TCP_TOSERVER)-1; i++)
 467   2                      {
 468   3                              send_byte(TC_TCP_TOSERVER[i]);
 469   3                      }
 470   2                      send_byte(0x0d);
 471   2                      send_byte(0x0a);
 472   2                      Delay10ms(10);
 473   2      
 474   2                      P0 = 0x0c;       // 0000 1100
 475   2      
 476   2                      send_byte(0x30); // 0
 477   2                      send_byte(0x0d);
 478   2                      send_byte(0x0a);
 479   2                      print_r_datas();
 480   2                      send_byte(0x0d);
 481   2                      send_byte(0x0a);
 482   2                      send_byte(0x30); // 0
 483   2      
 484   2      
 485   2                      //正确返回：
 486   2                      //OK
 487   2      
 488   2                      //CONNECT OK
 489   2                      p = strstr(r_datas,"CONNECT OK");
C51 COMPILER V9.01   SIM800L                                                               04/01/2019 14:31:40 PAGE 9   

 490   2                      if(p != NULL)
 491   2                      {
 492   3                              break;
 493   3                      }
 494   2              }
 495   1      
 496   1      }
 497          
 498          void tcp_9_sendtext()
 499          {
 500   1              int i;
 501   1              unsigned char *p;
 502   1              unsigned char *g;
 503   1              int j;
 504   1      
 505   1              while(1)
 506   1              {
 507   2                      for(i = 0; i < sizeof(TC_TCP_SENDTEXT)-1; i++)
 508   2                      {
 509   3                              send_byte(TC_TCP_SENDTEXT[i]);
 510   3                      }
 511   2                      send_byte(0x0d);
 512   2                      send_byte(0x0a);
 513   2                      Delay10ms(5); // 在调试的时候需要把延迟加大，向串口发送'>'字符串，才会向TCP服务器发送数据
 514   2                                                      // 连接模块的时候可以适当调小
 515   2                      P0 = 0x30;       // 0011 0000
 516   2      
 517   2                      //      正确返回：
 518   2                      //      >
 519   2      
 520   2                      //      然后输入内容
 521   2                      //  最后输入结束符：1A
 522   2      
 523   2                      //      发送成功返回：
 524   2                      //      SEND OK
 525   2                      //
 526   2                      //      CLOSED
 527   2      
 528   2                      p = strstr(r_datas,">");
 529   2                      if(p != NULL)
 530   2                      {
 531   3                              break;                                                    
 532   3                      }
 533   2              }
 534   1      
 535   1              while(1)
 536   1              {
 537   2                      for(j = 13;j < strlen(t_datas); j++)
 538   2                      {
 539   3                              send_byte(t_datas[j]);
 540   3                      }
 541   2                      send_byte(0x0d);
 542   2                      send_byte(0x0a);
 543   2                      send_byte(0x1a);
 544   2                      
 545   2      //              Delay10ms(10);          // 这里不能延迟。延迟会导致收不到SEND OK信号，原因不明  
 546   2      
 547   2                      P0 = 0xc0;       // 1100 0000
 548   2      
 549   2              
 550   2                      g = strstr(r_datas,"SEND OK");
 551   2                      if(g != NULL)
C51 COMPILER V9.01   SIM800L                                                               04/01/2019 14:31:40 PAGE 10  

 552   2                      {
 553   3                              P0 = 0xe0;       // 1110 0000
 554   3      
 555   3                              // 清空t_datas
 556   3                              memset(t_datas,0,sizeof(t_datas)*LENGTH);
 557   3                              break;
 558   3                      }
 559   2              }
 560   1      }
 561          
 562          void tcp_10_close()
 563          {
 564   1              int i;
 565   1              unsigned char *p;
 566   1      
 567   1      //      while(1)
 568   1      //      {
 569   1                      for(i = 0; i < sizeof(TC_TCP_CLOSE)-1; i++)
 570   1                      {
 571   2                              send_byte(TC_TCP_CLOSE[i]);
 572   2                      }
 573   1                      send_byte(0x0d);
 574   1                      send_byte(0x0a);
 575   1                      Delay10ms(5);
 576   1      
 577   1                      P0 = 0x07;       // 0000 0111
 578   1      
 579   1                      // 发送成功返回的是字符串 "CLOSE OK"
 580   1                      p = strstr(r_datas,"OK");
 581   1                      if(p != NULL)
 582   1                      {
 583   2      //                      break;
 584   2                      }
 585   1      //      }
 586   1      
 587   1      }
 588          
 589          void tcp_11_shut()
 590          {
 591   1              int i;
 592   1              unsigned char *p;
 593   1              
 594   1              for(i = 0; i < sizeof(TC_TCP_SHUT)-1; i++)
 595   1              {
 596   2                      send_byte(TC_TCP_SHUT[i]);
 597   2              }
 598   1              send_byte(0x0d);
 599   1              send_byte(0x0a);
 600   1              Delay10ms(5);   
 601   1      
 602   1              p = strstr(r_datas,"SHUT OK");
 603   1      
 604   1              if(p != NULL)
 605   1              {
 606   2                      //do something
 607   2              }
 608   1      
 609   1              P0 = 0x38;       // 0011 1000
 610   1      
 611   1      }
 612          
 613          
C51 COMPILER V9.01   SIM800L                                                               04/01/2019 14:31:40 PAGE 11  

 614          
 615          
 616          void serial() interrupt 4
 617          {
 618   1              if(RI == 1)
 619   1              {
 620   2                      RI = 0;
 621   2      //              index = 0;
 622   2                      r_datas[index++] = SBUF;
 623   2                      if(index > MAX)
 624   2                      {
 625   3                              MAX = index;
 626   3                      }
 627   2                      if(index > sizeof(r_datas))
 628   2                      {
 629   3                              index = 0;
 630   3                      }
 631   2      
 632   2              }
 633   1      }
 634          
 635          
 636          
 637          void UsartConfiguration()
 638          {
 639   1              SCON=0X50;                      //设置为工作方式1
 640   1              TMOD=0X20;                      //设置计数器工作方式2
 641   1              PCON=0X80;                      //波特率加倍
 642   1              TH1=0XF3;                   //计数器初始值设置，注意波特率是4800的
 643   1              TL1=0XF3;
 644   1              ES=1;                                           //打开接收中断
 645   1              EA=1;                                           //打开总中断
 646   1              TR1=1;                                      //打开计数器
 647   1      }
 648          
 649          
 650          void Delay10ms(unsigned int c)   //误差 0us
 651          {
 652   1          unsigned char a, b;
 653   1      
 654   1              //--c已经在传递过来的时候已经赋值了，所以在for语句第一句就不用赋值了--//
 655   1          for (;c>0;c--)
 656   1              {
 657   2                      for (b=38;b>0;b--)
 658   2                      {
 659   3                              for (a=130;a>0;a--);
 660   3                      }          
 661   2              }       
 662   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1363    ----
   CONSTANT SIZE    =    201    ----
   XDATA SIZE       =    800    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4      42
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
